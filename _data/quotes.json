[
  {
    "tekst": "Najveći izazov za programera je da se ne zbuni pred kompleksnošću sopstvene tvorevine.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Jednostavnost je preduslov za pouzdanost.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Program je kao pesma: ne možete napisati pesmu bez pisanja. Ipak, ljudi govore o programiranju kao procesu proizvodnje i mere „programersku produktivnost“ u terminima „broja proizvedenih linija koda“. Na taj način oni su na pogrešnoj strani knjige: Mi uvek gledamo „broj ušteđenih linija koda“.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Da li ste potpuno sigurni da sva ova zvona i praporci, sve ove predivne mogućnosti vaših takozvanih moćnih programskih jezika pripadaju skupu rešenja, a ne skupu problema?",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Računarska nauka se tiče računara koliko i astronomija teleskopa.",
    "en": "Computer Science is no more about computers than astronomy is about telescopes.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Programiranje je jedna od najtežih grana primenjene matematike; lošiji matematičari bolje da ostanu čisti matematičari.",
    "en": "Programming is one of the most difficult branches of applied mathematics; the poorer mathematicians had better remain pure mathematicians.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Ako je debagovanje proces uklanjanja bagova, onda programiranje mora biti proces njihovog umetanja.",
    "en": "If debugging is the process of removing software bugs, then programming must be the process of putting them in.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Kako ubediti ljude da u programiranju jednostavnost i jasnoća — što matematičari zovu \"elegancija\" — nisu nepriuštiv luksuz, već ključna stvar koja odlučuje između uspeha i propasti? ",
    "en": "How do we convince people that in programming simplicity and clarity — in short: what mathematicians call \"elegance\" — are not a dispensable luxury, but a crucial matter that decides between success and failure?",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Alati koje koristimo imaju veliki uticaj na naše navike u razmišljanju, a samim tim i na našu sposobnost razmišljanja uopšte.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Postoje dva načina izgradnje softvera: Jedan je napraviti ga toliko prostim da očigledno nema nedostaka, a drugi je napraviti ga toliko komplikovanim da nema očiglednih nedostataka. Prva metoda je puno teža.",
    "autor": "Tony Hoare"
  },
  {
    "tekst": "Najbolji umovi moje generacije misle o tome kako naterati ljude da klikću reklame.",
    "en": "The best minds of my generation are thinking about how to make people click ads.",
    "autor": "Jeff Hammerbacher"
  },
  {
    "tekst": "Ponekad postoji srebrni metak softverske produktivnosti. Ali treba da upucate pravu osobu.",
    "en": "Sometimes there is a silver bullet for boosting software engineering productivity. But you need to shoot the right person.",
    "autor": "Michael Stal"
  },
  {
    "tekst": "Dodavanje ljudstva na projekat koji kasni dovodi do još većeg kašnjenja.",
    "autor": "Fred Brooks"
  },
  {
    "tekst": "Ono što jedan programer može uraditi za mesec dana, dva programera mogu uraditi za dva meseca.",
    "en": "What one programmer can do in one month, two programmers can do in two months.",
    "autor": "Fred Brooks"
  },
  {
    "tekst": "Programer, poput pesnika, radi tek neznatno udaljen od čiste misli. On gradi dvorce u vazduhu, od vazduha, stvarajući naporom mašte. Retki mediji stvaranja su tako gipki, tako jednostavni za poliranje i preradu, tako podesni za realizaciju veličanstvene konceptualne tvorevine.",
    "autor": "Fred Brooks",
    "izvor": "Frederick P. Brooks Jr., The Mythical Man-Month"
  },
    {
    "tekst": "Nošenje trudnoće traje devet meseci, bez obzira koliko žena dodali.",
    "en": "The bearing of a child takes nine months, no matter how many women are assigned.",
    "autor": "Fred Brooks",
    "izvor": "Frederick P. Brooks Jr., The Mythical Man-Month"
  },
  {
    "tekst": "Devet žena ne može roditi bebu za mesec dana.",
    "en": "Nine women can't make a baby in one month.",
    "autor": "Fred Brooks",
    "izvor": "Frederick P. Brooks Jr., The Mythical Man-Month"
  },
  {
    "tekst": "Ako svaki zadatak mora biti zasebno koordiniran sa svakim drugim, napor komunikacije raste n(n-1)/2. Tri radnika zahtevaju trostruko više međusobne komunikacije nego dva; četiri zahtevaju šestostruko više nego dva.",
    "en": "If each part of the task must be separately coordinated with each other part, the effort increases as n(n-1)/2. Three workers require three times as much pairwise intercommunication as two; four require six times as much as two.",
    "autor": "Fred Brooks",
    "izvor": "Frederick P. Brooks Jr., The Mythical Man-Month"
  },
  {
    "tekst": "Prva lažna pretpostavka koja podriva rokove razvoja softvera je da će sve proći dobro, tj. da će svaki zadatak trajati samo koliko \"treba\" da traje. Veliki programerski projekat se, pak, sastoje od mnogo zadataka, od kojih su neki ulančani od početka do kraja. Verovatnoća da će sve proći dobro postaje nestvarno mala.",
    "en": "The first false assumption that underlies the scheduling of systems programming is that all will go well, i.e., that each task will hike only as long as it \"ought\" to take. A large programming effort, however, consists of many tasks, some chained end-to-end. The probability that each will go well becomes vanishingly small.",
    "autor": "Fred Brooks",
    "izvor": "Frederick P. Brooks Jr., The Mythical Man-Month"
  },
  {
    "tekst": "Imati sistemskog arhitektu je najvažniji korak ka konceptualnom integritetu. Nakon držanja laboratorija softverskog inženjerstva više od 20 puta, počeo sam da insistiram da mali studentski timovi, već od četvoro ljudi, izaberu menadžera i arhitektu.",
    "en": "Having a system architect is the most important single step toward conceptual integrity. After teaching a software engineering laboratory more than 20 times, I came to insist that student teams as small as four people choose a manager and a separate architect.",
    "autor": "Fred Brooks",
    "izvor": "Frederick P. Brooks Jr., The Mythical Man-Month"
  },
  {
    "tekst": "Treba da zaboravimo na male učinkovitosti, recimo u oko 97% slučajeva: prerana optimizacija je koren svih zala. Međutim, ne smemo propustiti priliku u tih kritičnih 3%.",
    "en": "We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Yet we should not pass up our opportunities in that critical 3%.",
    "autor": "Donald Knuth",
    "izvor": "Donald Knuth, Structured Programming with go to Statements, JACM Computing Surveys, Vol 6, No. 4, Dec. 1974, p.268"
  },
  {
    "tekst": "Da Java ima pravo sakupljanje smeća, većina programa bi izbrisala sebe po izvršenju.",
    "en": "If Java had true garbage collection, most programs would delete themselves upon execution.",
    "autor": "Robert Sewell"
  },
  {
    "tekst": "Jedan od mojih najproduktivnijih dana je bio kada sam bacio 1000 linija koda.",
    "autor": "Ken Thompson"
  },
  {
    "tekst": "Kada si u dvojbi, koristi brutalnu silu.",
    "autor": "Ken Thompson"
  },
  {
    "tekst": "Izbrisan kod je debagovan kod.",
    "autor": "Jeff Sickel"
  },
  {
    "tekst": "Jedno precizno merenje vredi više od hiljadu ekspertskih mišljenja.",
    "en": "One accurate measurement is worth more than a thousand expert opinions.",
    "autor": "Grace Hopper"
  },
  {
    "tekst": "Nevolja sa programerima je što nikad ne možeš znati šta rade dok ne bude prekasno.",
    "en": "The trouble with programmers is that you can never tell what a programmer is doing until it’s too late.",
    "autor": "Seymour Cray"
  },
  {
    "tekst": "Čišćenje koda ne uzima vreme. Ne čišćenje koda uzima vreme.",
    "en": "Cleaning code does NOT take time. NOT cleaning code does take time.",
    "autor": "Robert C. Martin"
  },
  {
    "tekst": "Još nisam video problem, ma kako zamršen, koji kad se osmotri na pravi način, ne postoje još zamršeniji.",
    "en": "I have yet to see any problem, however complicated, which when looked at in the right way, did not become more complicated.",
    "autor": "Poul Anderson"
  },
  {
    "tekst": "Uvek kodiraj kao da će momak koji nasledi tvoj kod biti nasilni psihopata koji zna gde živiš.",
    "en": "Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live.",
    "autor": "Rick Osborne"
  },
  {
    "tekst": "Hodanje po vodi i razvijanje softvera po specifikaciji su lakši kad je zaleđena.",
    "en": "Walking on water and developing software from a specification are easy if both are frozen.",
    "autor": "Edward V. Berard"
  },
  {
    "tekst": "Debagovanje je dvostruko teže od pisanja koda. Ako si napisao kod najpametnije što možeš, onda, po definiciji, nisi dovoljno pametan da ga debaguješ.",
    "en": "Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.",
    "autor": "Brian Kernighan"
  },
  {
    "tekst": "Kontrola kompleksnosti je suština kompjuterskog programiranja.",
    "autor": "Brian Kernighan"
  },
  {
    "tekst": "Lepota je važnija u računarstvu nego igde drugde u tehnologiji, zato što je softver tako složen. Lepota je ultimativna odbrana od složenosti.",
    "autor": "David Gelernter"
  },
  {
    "tekst": "Program koji dvostruko brže daje netačan rezultat je beskonačno sporiji.",
    "autor": "John Osterhout"
  },
  {
    "tekst": "Nije da su Perl programeri idioti, samo taj jezik nagrađuje idiotsko ponašanje na način na koji ni jedan drugi jezik ili alat nikada nisu.",
    "autor": "Erik Naggum"
  },
  {
    "tekst": "Unix je jednostavan. Samo je potreban genij da razume njegovu jednostavnost.",
    "autor": "Dennis Ritchie"
  },
  {
    "tekst": "Ako misliš da su tvoji korisnici idioti, samo će idioti to koristiti.",
    "autor": "Linus Torvalds"
  },
  {
    "tekst": "Meriti napredak programa po broju linija koda je kao meriti napredak gradnje aviona po težini.",
    "en": "Measuring programming progress by lines of code is like measuring aircraft building progress by weight.",
    "autor": "Bill Gates"
  },
  {
    "tekst": "Prvo, reši problem. Onda, piši kod.",
    "autor": "John Johnson"
  },
  {
    "tekst": "Složenost ubija. Ona isisava život iz developera, čini proizvode teškim za planiranje, pravljenje i testiranje, uvodi bezbednosne izazove i izaziva frustracije korisnika i administratora.",
    "autor": "Ray Ozzie"
  },
  {
    "tekst": "Jezik koji nema sve je zapravo lakši za programiranje u tome što ima.",
    "autor": "Dennis Ritchie"
  },
  {
    "tekst": "Ne možeš verovati kodu koji nisi u potpunosti sam napisao.",
    "autor": "Ken Thompson"
  },
  {
    "tekst": "Jednostavnost je vrhunska prefinjenost.",
    "autor": "Leonardo da Vinci"
  },
  {
    "tekst": "Kompatibilnost znači namerno ponavljati tuđe greške.",
    "autor": "David Wheeler"
  },
  {
    "tekst": "Vreme debagovanje se povećava kvadratno u odnosu na veličinu programa.",
    "autor": "Chris Wenham"
  },
  {
    "tekst": "Kompjuter je glupa mašina sa sposobnošću da radi neviđeno pametne stvari, dok je programer pametan čovek sa sposobnošću da radi neviđeno glupe stvari.",
    "autor": "David Parnas"
  },
  {
    "tekst": "Preko pola vremena koje provedeš radeći na projektu je razmišljanje, i nema alatke, ma koliko bila napredna, koja može razmišljati umesto tebe.",
    "autor": "Dick Gabriel"
  },
  {
    "tekst": "Više je računarskih grehova počinjeno u ime efikasnosti (bez da je nužno dostignuta) nego iz bilo kog drugog razloga, uključujući čistu glupost.",
    "autor": "William Wulf"
  },
  {
    "tekst": "Dva glavna proizvoda izašla iz Berklija su: LSD i UNIX. Ne verujemo da je to koincidencija.",
    "en": "There are two major products that come out of Berkeley: LSD and UNIX. We don't believe this to be a coincidence.",
    "autor": "Jeremy S. Anderson"
  },
  {
    "tekst": "Napravi procenu, udvostruči broj, a onda pređi na narednu jedinicu vremena. Ovo pravilo skalira zadatke na veoma interesantan način: jednominutni zadatak eksplodira stepenom od 120 da uzme dva časa. Jednočasovni zadatak eksplodira \"samo\" stepenom 48 na dva dana, dok jednodnevni posao poraste stepenom od 14 na dve sedmice.",
    "en": "Make a guess, double the number, and then move to the next larger unit of time. This rule scales tasks in a very interesting way: a one-minute task explodes by a factor of 120 to take two hours. A one-hour job explodes by \"only\" a factor 48 to take two days, while a one-day job grows by a factor of 14 to take two weeks.",
    "autor": "﻿Poul-Henning Kamp",
    "izvor": "﻿Poul-Henning Kamp, The hyperdimensional tar pit"
  },
  {
    "tekst": "Kada imaš samo čekić, sve ti liči na ekser.",
    "en": "When all you have is a hammer, everything starts to look like a nail.",
    "autor": "Abraham Maslow"
  },
  {
    "tekst": "Mnogo je poštenije reći greška nego buba, jer nedvosmisleno stavlja krivicu tamo gde treba, na programera koji ju je napravio.",
    "en": "We could, for instance, begin with cleaning up our language by no longer calling a bug a bug but by calling it an error. It is much more honest because it squarely puts the blame where it belongs, viz. with the programmer who made the error. The animistic metaphor of the bug that maliciously sneaked in while the programmer was not looking is intellectually dishonest as it disguises that the error is the programmer's own creation. The nice thing of this simple change of vocabulary is that it has such a profound effect: while, before, a program with only one bug used to be \"almost correct\", afterwards a program with an error is just \"wrong\" (because in error).",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Testiranje može samo dokazati prisustvo bagova, ne njihovo odsustvo.",
    "en": "Testing can only prove the presence of bugs, not their absence.",
    "autor": "Edsger W. Dijkstra"
  },
  {
    "tekst": "Kompetentan programer je potpuno svestan ograničene veličine svoje lobanje. On stoga prilazi svojim zadacima sa potpunom skromnošću, i izbegava lukave trikove kao kugu.",
    "en": "The competent programmer is fully aware of the strictly limited size of his own skull; therefore he approaches the programming task in full humility, and among other things he avoids clever tricks like the plague",
    "autor": "Edsger W. Dijkstra",
    "izvor": "The Humble Programmer (1972)"
  },
  {
    "tekst": "Kod nikada ne laže, komentari nekad lažu.",
    "autor": "Ron Jeffries"
  },
  {
    "tekst": "Ono što ne mogu napraviti, ne razumem.",
    "autor": "Richard Feynman"
  },
  {
    "tekst": "Retko sam srećniji nego kad provedem čitav dan programirajući svoj računar da automatski izvrši zadatak za koji bi mi inače trebalo dobrih deset sekundi da uradim ručno.",
    "autor": "Douglas Adams"
  },
  {
    "tekst": "Kada radim na problemu nikada ne razmišljam o lepoti. Razmišljam jedino kako da rešim problem. Ali kada završim, ako rešenje nije lepo, znam da je pogrešno.",
    "autor": "Buckminster Fuller"
  },
  {
    "tekst": "Ja, u stvari, tvrdim da je razlika između lošeg i dobrog programera u tome da li on smatra njegov kod ili strukture podataka važnijim. Loši programeri brinu o kodu. Dobri programeri brinu o strukturama podataka i njihovim odnosima.",
    "autor": "Linus Torvalds"
  },
  {
    "tekst": "Neki problemi su toliko kompleksni da morate biti visoko inteligentni i dobro informisani samo da biste bili neodlučni oko njih.",
    "autor": "Laurence J. Peter"
  },
  {
    "tekst": "Pametni ljudi rešavaju probleme. Mudri ih izbegavaju.",
    "en": "A clever person solves a problem. A wise person avoids it.",
    "autor": "Albert Einstein"
  },
  {
    "tekst": "Jednom kad prestanete da učite, počinjete da umirete.",
    "autor": "Albert Einstein"
  },
  {
    "tekst": "Mašta je važnija od znanja.",
    "autor": "Albert Einstein",
    "izvor": "U razgovoru s Georgeom Sylvesterom Viereckom What Life Means to Einstein (u novinama The Saturday Evening Post, 26. listopada 1929.)"
  },
  {
    "tekst": "Život je poput vožnje bicikla. Da bi održao ravnotežu, moraš biti stalno u kretanju.",
    "autor": "Albert Einstein",
    "izvor": "Iz pisma sinu Eduardu (5. veljače 1930.), zapisano u knjizi Waltera Isaacsona: Einstein: His Life and Universe (2007.), strana 367."
  },
  {
    "tekst": "Ja nemam neke posebne talente. Samo sam jako radoznao.",
    "autor": "Albert Einstein",
    "izvor": "Pismo Carlu Seeligu (11. ožujka 1952.), zabilježeno u Einstein Archives 39-013"
  },
  {
    "tekst": "Inteligentna budala može napraviti da stvari budu veće, složenije i više nasilne. Potreban je dodir genija, i mnogo hrabrosti, za pokret u suprotnom pravcu.",
    "autor": "Albert Einstein"
  },
  {
    "tekst": "Jednostavnost dovedena do ekstrema postaje elegancija.",
    "autor": "Jon Franklin"
  },
  {
    "tekst": "Softver podleže zakonu širenja gasa – nastavlja da raste sve dok potpuno ne ispuni memoriju.",
    "autor": "Larry Gleason"
  },
  {
    "tekst": "Sposobnost uprošćavanja znači eliminisati ne-neophodno kako bi neophodno moglo progovoriti.",
    "autor": "Hans Hoffmann"
  },
  {
    "tekst": "Odgovarajuća upotreba komentara je kompenzacija za naš neuspeh da se izrazimo u kodu.",
    "autor": "Robert C. Martin"
  },
  {
    "tekst": "Svaka budala može napisati kod koji računar razume. Dobri programeri pišu kod koji ljudi razumeju.",
    "en": "Any fool can write code that a computer can understand. Good programmers write code that humans can understand.",
    "autor": "Martin Fowler",
    "izvor": "Martin Fowler, Refactoring"
  },
  {
    "tekst": "Pravo pitanje nije misle li mašine, već misle li ljudi.",
    "en": "The real question is not whether machines think but whether men do.",
    "autor": "B. F. Skinner"
  },
  {
    "tekst": "Nikad nisam zadovoljan dok ne kažem najviše moguće sa najmanje reči, a sažeto pisanje uzima mnogo više vremena nego pisanje nadugačko.",
    "en": "I am never satisfied until I have said as much as possible in a few words, and writing briefly takes far more time than writing at length.",
    "autor": "Carl Friedrich Gauss"
  },
  {
    "tekst": "Par meseci pisanja koda može ti uštedeti par sati projektovanja.",
    "en": "A few months writing code can save you a few hours in design.",
    "autor": "Nepoznat"
  },
  {
    "tekst": "Dobar kod je kratak, jednostavan i simetričan – izazov je da otkriješ kako stići dotle.",
    "autor": "Sean Parent"
  },
  {
    "tekst": "Jedini greh je napraviti izbor neznajući da si ga napravio.",
    "autor": "Jonathan Shewchuk"
  },
  {
    "tekst": "Bolna je stvar pogledati na svoju nevolju i shvatiti da si ti i niko drugi to napravio.",
    "autor": "Sofokle, Ajaks"
  },
  {
    "tekst": "Postoji samo dve vrste jezika: oni na koje se ljudi žale i oni koje niko ne koristi.",
    "en": "There are only two kinds of languages: the ones people complain about and the ones nobody uses.",
    "autor": "Bjarne Stroustrup"
  },
  {
    "tekst": "Organizacija koja tretira svoje programere kao morone će uskoro imati programere koji su voljni i kadri da se ponašaju jedino kao moroni.",
    "autor": "Bjarne Stroustrup"
  },
  {
    "tekst": "Oduvek sam želeo da moj kompjuter bude jednostavan za upotrebu kao moj telefon. Moja želje se obistinila. Sada više ne znam da koristim svoj telefon.",
    "autor": "Bjarne Stroustrup"
  },
  {
    "tekst": "Najvažniji pojedini aspekt razvoja softvera je biti načisto oko toga šta pokušavaš da napraviš.",
    "autor": "Bjarne Stroustrup"
  },
  {
    "tekst": "Softver postaje sporiji brže nego što hardver postaje brži.",
    "autor": "Wirthov zakon"
  },
  {
    "tekst": "Svrha softverskog razvoja je da kontroliše složenost, ne da je stvara.",
    "autor": "Pamela Zave"
  },
  {
    "tekst": "Složenost nema nikakve veze sa inteligencijom, jednostavnost ima.",
    "autor": "Larry Bossidy"
  },
  {
    "tekst": "Jednostavnost je teško izgraditi, lako koristiti, i teško naplatiti. Složenost je lako izgraditi, teško koristiti, i lako naplatiti.",
    "autor": "Chris Sacca"
  },
  {
    "tekst": "Kompjuteri vam olakšavaju mnoge stvari, ali mnoge stvari koje oni olakšavaju ne treba da budu urađene.",
    "autor": "Andy Rooney"
  },
  {
    "tekst": "Kada si u dvojbi, ostavi to.",
    "autor": "Joshua Bloch"
  },
  {
    "tekst": "Ni jedan kod nije brži od koda kog nema.",
    "autor": "Merb motto"
  },
  {
    "tekst": "Problem sa objektno orjentisanim jezicima je što oni imaju svo to implicitno okruženje koje nose sa sobom. Vi hoćete bananu ali ono što dobijate je gorila koji drži bananu sa sve džunglom.",
    "autor": "Joe Armstrong"
  },
  {
    "tekst": "U programiranju težak deo nije rešavanje problema, već odlučivanje koje probleme rešiti.",
    "autor": "Paul Graham"
  },
  {
    "tekst": "Kada ne postoji hijerarhija tipova ne morate da upravljate hijerarhijom tipova.",
    "autor": "Rob Pike"
  },
  {
    "tekst": "Toliko složenosti u softveru dolazi iz pokušavanja da se napravi da jedna stvar radi dve stvari.",
    "autor": "Ryan Singer"
  },
  {
    "tekst": "Složen sistem koji radi je bez izuzetka evoluirao od jednostavnog sistema koja je radio. Obrnuta tvrdnja takođe izgleda istinita: složen sistem projektovan od nule nikad ne radi i ne može biti napravljen da radi.",
    "autor": "John Gall"
  },
  {
    "tekst": "Normalni ljudi veruju da ako nije pokvareno, ne treba popraviti. Inženjeri veruju da ako nije pokvareno, još uvek nema dovoljno mogućnosti.",
    "autor": "Scott Adams"
  },
  {
    "tekst": "Matematičari stoje jedni drugima na ramenima, a kompjuterski naučnici stoje jedni drugima na prstima.",
    "autor": "Richard Hamming"
  },
  {
    "tekst": "PHP je malo zlo, počinjeno i stvoreno od nekompetentnih amatera, dok je Perl veliko i podmuklo zlo, počinjeno od obučenih ali izopačenih profesionalaca.",
    "autor": "Mike Stay"
  },
  {
    "tekst": "Hofštadter zakon: Uvek vam treba duže nego što ste očekivali, čak i kada se uzme u obzir Hofštadter zakon.",
    "autor": "P. J. Plauger"
  },
  {
    "tekst": "Najneverovatnije dostignuće računarske softverske industrije je kontinuirano poništavanje stalnih i neverovatnih doprinosa računarske hardverske industrije.",
    "autor": "Henry Petroski"
  },
  {
    "tekst": "Ne postoji programski jezik, bez obzira koliko struktuiran, koji će sprečiti programere da prave loše programe.",
    "autor": "Larry Flon"
  },
  {
    "tekst": "Nikada ne pamti nešto što možeš pogledati.",
    "autor": "Albert Einstein"
  },
  {
    "tekst": "Svako bi trebalo da nauči da programira, jer to te uči kako da misliš.",
    "autor": "Steve Jobs"
  },
  {
    "tekst": "Dobar programer je neko ko uvek gleda levo-desno kada prelazi jednosmernu ulicu.",
    "autor": "Doug Linder"
  },
  {
    "tekst": "Jednom kada nova tehnologija počne da se valja, ako nisi deo valjka, onda si deo druma.",
    "autor": "Stewart Brand"
  }
]
